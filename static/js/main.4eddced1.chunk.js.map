{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","InputArea","useState","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"4MAceA,MAZf,SAAkBC,GAChB,OACE,yBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,MAGxB,4BAAKH,EAAMI,QCgBFC,MAvBf,SAAmBL,GACjB,MAAkCM,mBAAS,IAAG,mBAAvCC,EAAS,KAAEC,EAAY,KAO9B,OACE,yBAAKC,UAAU,QACb,2BAAOC,SAPX,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKoBG,KAAK,OAAOD,MAAOP,IAClD,4BACEN,QAAS,WACPD,EAAMgB,MAAMT,GACZC,EAAa,MAGf,wCCwBOS,MAvCf,WACE,MAA0BX,mBAAS,IAAG,mBAA/BY,EAAK,KAAEC,EAAQ,KAQtB,SAASC,EAAWjB,GAClBgB,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUrB,QAKvB,OACE,yBAAKM,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAS,CAACO,MAnBf,SAAiBT,GACfY,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAS,CAAEd,UAkBtB,6BACE,4BACGW,EAAMO,KAAI,SAACC,EAAUF,GAAK,OACzB,kBAAC,EAAQ,CACPG,IAAKH,EACLrB,GAAIqB,EACJpB,KAAMsB,EACNxB,UAAWkB,WC9BzBQ,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.4eddced1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li>{props.text}</li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction InputArea(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <input onChange={handleChange} type=\"text\" value={inputText} />\r\n      <button\r\n        onClick={() => {\r\n          props.onAdd(inputText);\r\n          setInputText(\"\");\r\n        }}\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  function addItem(inputText) {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n  }\n\n  function deleteItem(id) {\n    setItems(prevItems => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}